version: '3.8'
services:
  traefik:
    image: traefik:v2.5
    command:
      - "--api.insecure=${TRAEFIK_API_INSECURE}"
      - "--providers.docker=${TRAEFIK_PROVIDERS_DOCKER}"
      - "--providers.docker.exposedByDefault=false"
      - "--entrypoints.web.address=${TRAEFIK_ENTRYPOINTS_WEB_ADDRESS}"
      - "--entrypoints.websecure.address=:443"
      - "--certificatesresolvers.myresolver.acme.tlschallenge=true"
      - "--certificatesresolvers.myresolver.acme.email=${LETSENCRYPT_EMAIL}"
      - "--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json"
    ports:
      - "${TRAEFIK_PORT}:80"
      - "443:443"
      - "${TRAEFIK_DASHBOARD_PORT}:8080"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "./letsencrypt:/letsencrypt"  # Store certificate data
    networks:
      - web

  app:
    image: ${PROJECT_NAME}-${BACKEND_PROJECT_NAME}:latest
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.${BACKEND_PROJECT_NAME}.rule=Host(`pocetna.test`) && PathPrefix(`/api`)"
      - "traefik.http.routers.${BACKEND_PROJECT_NAME}.entrypoints=websecure"  # Use HTTPS
      - "traefik.http.routers.${BACKEND_PROJECT_NAME}.tls.certresolver=mytlschallenge"  # Use Let's Encrypt
      - "traefik.http.services.${BACKEND_PROJECT_NAME}.loadbalancer.server.port=${BACKEND_PORT}"
    volumes:
      - .:/app/backend
    environment:
      - NAME=World
      - ALLOWED_ORIGINS=${ALLOWED_ORIGINS}
      - NUMBER_OF_WORKERS=${NUMBER_OF_WORKERS}
    depends_on:
      - traefik
    networks:
      - web

  pdf_reader_app_client:
    build:
      context: ./app_frontend/frontend/pdf_reader_app_client
      args:
        VUE_APP_BACKEND_PATH: https://pocetna.test/api
        VUE_APP_LOGIN_PATH: http://localhost:8180
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.${FRONTEND_PROJECT_NAME}.rule=Host(`pocetna.test`) && PathPrefix(`/app`)"
      - "traefik.http.middlewares.${FRONTEND_PROJECT_NAME}-stripprefix.stripprefix.prefixes=/app"
      - "traefik.http.routers.${FRONTEND_PROJECT_NAME}.middlewares=${FRONTEND_PROJECT_NAME}-stripprefix@docker"
      - "traefik.http.routers.${FRONTEND_PROJECT_NAME}.entrypoints=websecure"  # Use HTTPS
      - "traefik.http.routers.${FRONTEND_PROJECT_NAME}.tls.certresolver=mytlschallenge"  # Use Let's Encrypt
      - "traefik.http.services.${FRONTEND_PROJECT_NAME}.loadbalancer.server.port=80"
    depends_on:
      - traefik
    networks:
      - web


networks:
  web:
    driver: bridge
